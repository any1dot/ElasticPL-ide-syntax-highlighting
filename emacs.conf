;; Elastic ePL
(setq epl-font-lock-keywords
      (let* (
             ;; define several category of keywords
             (x-keywords '("break" "continue" "if" "else" "function" "repeat"))
             (x-types '("array_int" "array_uint" "array_float" "array_double" "array_long" "array_ulong"))
             (x-constants '("i" "u" "f" "d" "l" "ul" "m" "s"))
             (x-functions '("verify_bty" "verify_pow" "submit_sz" "submit_idx"
                            "sinh" "sin" "cosh" "cos" "tanh" "tan" "asin" "acos" "atan2" "atan"
                            "exp" "log10" "log" "pow" "sqrt" "ceil" "floor" "fabs" "abs" "fmod"
                            "gcd"))

             ;; generate regex string for each category of keywords
             (x-keywords-regexp (regexp-opt x-keywords 'words))
             (x-types-regexp (regexp-opt x-types 'words))
             (x-constants-regexp (regexp-opt x-constants 'words))
             (x-functions-regexp (regexp-opt x-functions 'words))
             )
        (
         (,x-types-regexp . font-lock-type-face)
         (,x-constants-regexp . font-lock-constant-face)
         (,x-functions-regexp . font-lock-function-name-face)
         (,x-keywords-regexp . font-lock-keyword-face)
         ;; note: order above matters, because once colored, that part won't change.
         ;; in general, put longer words first
         )
        ))

(define-derived-mode epl-mode c-mode "ePL mode"
  "Major mode for editing ElasticPL programming language."
  (setq font-lock-defaults '((epl-font-lock-keywords))))
;; add the mode to the `features' list
(provide 'epl-mode)
;; setup files ending in “.epl” to open in epl-mode
(add-to-list 'auto-mode-alist '("\\.epl\\'" . epl-mode))
